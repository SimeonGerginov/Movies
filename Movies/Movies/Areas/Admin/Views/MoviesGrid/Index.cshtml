@using Movies.Web.ViewModels.Grid
<div class="container body-content">
    <h1>
        <i class="fa fa-globe fa-3x" aria-hidden="true"></i>
        Movies Grid
    </h1>

    @(Html.Kendo()
          .Grid<GridMovieViewModel>()
          .Name("MoviesGrid")
          .Columns(columns =>
          {
              columns.Bound(m => m.Image)
                  .ClientTemplate("<img class='grid-photo' src='" + Url.Action("getImage", "MoviesGrid") + "/#= Id #" + "'/>");
              columns.Bound(m => m.Name).Title("Name").Width(300);
              columns.Bound(m => m.Year).Title("Year").Width(150);
              columns.Bound(m => m.RunningTime).Title("Running Time");
              columns.Bound(m => m.GenreName).Title("Genre").Width(150);
              columns.Bound(m => m.CreatedOn).Title("Created On").Format("{0:MM/dd/yy H:mm:ss}").Width(300);
              columns.Bound(m => m.ModifiedOn).Title("Modified On").Format("{0:MM/dd/yy H:mm:ss}").Width(300);
              columns.Command(command =>
              {
                  command.Edit();
                  command.Destroy();
              }).Width(500);
          })
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable(m =>
          {
              m.Refresh(true);
              m.PageSizes(true);
          })
          .Sortable()
          .DataSource(source =>
          {
              source.Ajax()
                  .Model(m =>
                  {
                      m.Id(mv => mv.Id);
                      m.Field(mv => mv.Image).Editable(false);
                      m.Field(mv => mv.GenreName).Editable(false);
                      m.Field(mv => mv.CreatedOn).Editable(false);
                      m.Field(mv => mv.ModifiedOn).Editable(false);
                  })
                  .Read(m => m.Action("ReadMovies", "MoviesGrid")).PageSize(GlobalConstants.GridsPageSize)
                  .Destroy(m => m.Action("DeleteMovie", "MoviesGrid"))
                  .Update(m => m.Action("EditMovie", "MoviesGrid"));
          })
          .Filterable(f => f.Mode(GridFilterMode.Menu))
          .Deferred())
</div>
